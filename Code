<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Debeight Leaderboard</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f4f6f8;
      margin: 0;
      padding: 30px;
    }
    h1, h3 { color: #333; }
    .container { max-width: 900px; margin: auto; background: #fff; padding: 20px 30px; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
    table { border-collapse: collapse; width: 100%; margin-top: 20px; }
    th, td { border: 1px solid #ddd; padding: 10px; text-align: center; cursor: pointer; }
    th { background-color: #007acc; color: #fff; user-select: none; }
    tr:nth-child(even) { background-color: #f9f9f9; }
    tr:hover { background-color: #e6f2ff; }
    input { margin: 5px; padding: 8px; border-radius: 6px; border: 1px solid #ccc; }
    button {
      margin: 5px;
      padding: 8px 15px;
      border: none;
      border-radius: 6px;
      background-color: #007acc;
      color: #fff;
      cursor: pointer;
      transition: background-color 0.2s;
    }
    button:hover { background-color: #005f99; }
    .form-section { margin-top: 20px; padding: 15px; border: 1px solid #ddd; border-radius: 10px; background: #fafafa; }
  </style>
</head>
<body>
  <div class="container">
    <h1>Debeight Leaderboard</h1>

    <div class="form-section">
      <h3>Add / Update Debater</h3>
      <input type="text" id="name" placeholder="Debater Name">
      <input type="number" id="score" placeholder="Debate Score (0-100)" min="0" max="100">
      <input type="number" id="debates" placeholder="Number of Debates (for new debaters)" min="1">
      <button onclick="addDebate()">Submit</button>
    </div>

    <div class="form-section">
      <h3>Remove Debater</h3>
      <input type="text" id="removeName" placeholder="Debater Name">
      <button onclick="removeDebater()">Remove</button>
    </div>

    <table>
      <thead>
        <tr>
          <th onclick="sortTable('id')">ID &#9650;</th>
          <th onclick="sortTable('rank')">Rank &#9650;</th>
          <th onclick="sortTable('name')">Name &#9650;</th>
          <th onclick="sortTable('average')">Average Rating &#9650;</th>
          <th onclick="sortTable('debates')">Number of Debates &#9650;</th>
        </tr>
      </thead>
      <tbody id="leaderboard">
      </tbody>
    </table>
  </div>

  <script>
    const exampleDebaters = [
      { id: 1, name: "Jaafar", average: 75, debates: 8 },
      { id: 2, name: "Linda", average: 68, debates: 4 },
      { id: 3, name: "Omar", average: 82, debates: 6 },
    ];

    let debaters = JSON.parse(localStorage.getItem('debaters')) || exampleDebaters;
    let sortDirection = { id: true, rank: true, name: true, average: true, debates: true };

    function saveData() {
      localStorage.setItem('debaters', JSON.stringify(debaters));
      renderLeaderboard();
    }

    function generateID() {
      return debaters.length ? Math.max(...debaters.map(d => d.id)) + 1 : 1;
    }

    function addDebate() {
      const name = document.getElementById('name').value.trim();
      let score = parseFloat(document.getElementById('score').value);
      let newDebates = parseInt(document.getElementById('debates').value);

      if (!name || isNaN(score) || score < 0 || score > 100) {
        alert("Enter valid name and score (0-100).");
        return;
      }

      let debater = debaters.find(d => d.name.toLowerCase() === name.toLowerCase());
      if (debater) {
        debater.average = ((debater.average * debater.debates) + score) / (debater.debates + 1);
        debater.debates += 1;
      } else {
        if (isNaN(newDebates) || newDebates < 1) newDebates = 1;
        debater = { id: generateID(), name, average: score, debates: newDebates };
        debaters.push(debater);
      }

      debaters.sort((a, b) => b.average - a.average);
      saveData();
      document.getElementById('name').value = '';
      document.getElementById('score').value = '';
      document.getElementById('debates').value = '';
    }

    function removeDebater() {
      const name = document.getElementById('removeName').value.trim();
      if (!name) { alert("Enter a valid name to remove."); return; }
      debaters = debaters.filter(d => d.name.toLowerCase() !== name.toLowerCase());
      saveData();
      document.getElementById('removeName').value = '';
    }

    function sortTable(column) {
      const dir = sortDirection[column] ? 1 : -1;
      if(column === 'rank') {
        debaters.sort((a, b) => dir * (b.average - a.average));
      } else if(column === 'name') {
        debaters.sort((a, b) => dir * a.name.localeCompare(b.name));
      } else {
        debaters.sort((a, b) => dir * (a[column] - b[column]));
      }
      sortDirection[column] = !sortDirection[column];
      renderLeaderboard(column);
    }

    function renderLeaderboard(sortedColumn) {
      const tbody = document.getElementById('leaderboard');
      tbody.innerHTML = '';
      if(!sortedColumn || sortedColumn==='rank') {
        debaters.sort((a,b) => b.average - a.average);
      }
      debaters.forEach((d, i) => {
        const row = `<tr>
          <td>${d.id}</td>
          <td>${i + 1}</td>
          <td>${d.name}</td>
          <td>${d.average.toFixed(2)}</td>
          <td>${d.debates}</td>
        </tr>`;
        tbody.innerHTML += row;
      });
    }

    renderLeaderboard();
  </script>
</body>
</html>
